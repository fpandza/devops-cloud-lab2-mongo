sudo: required
services:
- docker
language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag devops-cloud-lab2-mongo/swagger_server devops-cloud-lab2-mongo/swagger_server
- docker push devops-cloud-lab2-mongo/swagger_server
env:
  global:
  - secure: Y+kUgvs5dIZnDv9bUAPQb7IgrQEUchsyZWh9WGdHXyrMqe3Noxh7QC2x1T/lVCVm6jFZ4GMhE54YfLpalsIm08aG460c03DV7AITAlI78NCT3CJ/cJyuA8c7VHfFQ/HK6KqS7e5+nDGjs+k7DXVbPPVak4BK8Y8l9kt+As+U1I0bZKZ6HaYhYDV6tA1E9VFubZFrvXfNo+0y0lv3+22abJnJrGuD7UQYcu+3a0KfjArJvrjR5VMaUIbWo8pE75YgXeBkE3+5eYwUT9nzIokSD051vRf3ryuqex4g+4K/lSfKS5O0mc+HRE5mIRHtx/SWVr+V1oBePNa48oJ1FZ7Ae3NGtDL05cN9Q2Bqogwt+Wf/Ojm2xjKhwZHxjVjgA4OzZ5EKpeEeB8M/iTAtunSQSKXoCWv/bb5euff12YOtCV0LE2QEcKVT4i2ckLoriOTb+qFl0OlXOckR/oPvO4K7vtT6Cn9BVmuLHBHJtgl/l3oxoLQvg35znFYZTwyS/TPue12AEh4jSEz4rn4OQKPCabmsirAhRrehhP237epJjygQqS5M/Z3AB5U1+ZbY5G8YYmwjvtWRaldtMxO/4zWLkpi8X1CQ8rCY8aMNOo023IvI9nSz5gSoSH5DuY3q9wqpbNTBguqSkVuGoFLdhcrBVBlawPapPUIjvtQ7uYda7Sw=
  - secure: lYvLSJjT+pOrfql7dZuoIQqilituNf00+HwUgvBM0zv/EtgtI3pmL8UEf/RD3FPPId4rICr0cj+WB9orMR7ji/XRAbF3/vTxIfTbRUMf62Xn+WMmHsQ9GWiEZUW26Wf5SIPal9Spjte0L1QQEDXebuRYWsm0upSshheIPNw6R+pyVEGIa5DIBCvJ2mUxqt8tT6gUwF97DRLEtnHV+kazFV6V1l8tPgGNT1pu2Ty6HtNxq2tRUpqyyO+2VhtHzCQNQgO07a5puR2+rCLg23orooskgE1EEvZklpAcL7C/Q1XZaXY5QyltZhDOY1js59Y9uQ0OQpKSHM1p8BZJy2ie7d7m/6hc7o8rJDOXx9QkywTfeNp2oFSrS0S5IIsqE0z9gfyxT6ikCSerxzm6eSWyVfziZuuOgiTVFZ9analHuqeIFmyqYsUAx3oHsZHv9582tZNQmtB5MskJItREeWm8pZqRXGI3rBHACeZDTk/qSpYABXJKaMP6wwRbJ1PhW3S4T452ueBjqkb7C5+4jMO9Rfe3tisMUQDVpW76L/vHWSixkZHyDbF/+vDY/qTfb7gVwsBQaTtyOOrQzOd//+ILVaaXk6pUQE8HnChM6OPR9g7A7+cpWaSKaPmufdVzxAaFTJT/w1h4BXq/0TsaxEUtlVLJ8Gf7dJBD2+vWkUTwJQ8=
